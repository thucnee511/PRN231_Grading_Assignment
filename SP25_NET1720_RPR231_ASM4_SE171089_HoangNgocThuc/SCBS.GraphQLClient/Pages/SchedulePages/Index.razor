@page "/schedules"
@using SCBS.GraphQLClient.Models
@using SCBS.GraphQLClient.GrapQLClients
@inject GraphQLConsumer graphQLConsumer

<h1>Index</h1>

<p>
    <a href="schedules/create">Create New</a>
</p>

@if (schedules == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>UserId</th>
                <th>WorkDate</th>
                <th>Status</th>
                <th>Title</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var schedule in schedules)
            {
                <tr>
                    <td>@schedule.User.FullName</td>
                    <td>@schedule.WorkDate</td>
                    <td>@schedule.Status</td>
                    <td>@schedule.Title</td>
                    <td>
                        <a href="@($"schedules/edit?id={schedule.Id}")">Edit</a> |
                        <a href="@($"schedules/details?id={schedule.Id}")">Details</a> |
                        <a href="@($"schedules/delete?id={schedule.Id}")">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Schedule>? schedules;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            schedules = await graphQLConsumer.GetSchedules();
        }
        catch (Exception ex)
        {
			schedules = new List<Schedule>();
        }

    }
}
