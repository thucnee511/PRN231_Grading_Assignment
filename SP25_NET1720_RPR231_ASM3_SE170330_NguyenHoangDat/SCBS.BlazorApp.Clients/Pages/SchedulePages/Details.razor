@page "/schedules/details"
@using SCBS.BlazorApp.Clients.Models
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<h1>Details</h1>

<div>
    <h2>Schedule</h2>
    <hr />
    @if (schedule is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">UserId</dt>
            <dd class="col-sm-10">@schedule.UserId</dd>
            <dt class="col-sm-2">WorkDate</dt>
            <dd class="col-sm-10">@schedule.WorkDate</dd>
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@schedule.Status</dd>
            <dt class="col-sm-2">CreatedAt</dt>
            <dd class="col-sm-10">@schedule.CreatedAt</dd>
            <dt class="col-sm-2">UpdatedAt</dt>
            <dd class="col-sm-10">@schedule.UpdatedAt</dd>
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@schedule.Title</dd>
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@schedule.Description</dd>
            <dt class="col-sm-2">Location</dt>
            <dd class="col-sm-10">@schedule.Location</dd>
            <dt class="col-sm-2">Notes</dt>
            <dd class="col-sm-10">@schedule.Notes</dd>
        </dl>
        <div>
            <a href="@($"/schedules/edit?id={schedule.Id}")">Edit</a> |
            <a href="@($"/schedules")">Back to List</a>
        </div>
    }
</div>

@code {
    private Schedule? schedule;

    [SupplyParameterFromQuery]
    private Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        schedule = await httpClient.GetFromJsonAsync<Schedule>("https://localhost:7197/api/schedules/"+Id);

        if (schedule is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
